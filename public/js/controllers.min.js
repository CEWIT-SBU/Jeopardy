define("ContestantController", ['knockout'], function ($__0) {
    "use strict";
    var __moduleName = "ContestantController";
    if (!$__0 || !$__0.__esModule) $__0 = {
    default:
        $__0
    };
    var ko = $__0.
default;

    function Login(context) {
        require(['viewmodels/Contestant/LoginViewModel', 'text!Views/Templates/Contestant/Login.html!strip'], function ($__0, $__1) {
            if (!$__0 || !$__0.__esModule) $__0 = {
            default:
                $__0
            };
            if (!$__1 || !$__1.__esModule) $__1 = {
            default:
                $__1
            };
            var viewmodel = $__0.
        default;
            var html = $__1.
        default;
            var vm = new viewmodel({});
            context.app.swap(html);
            ko.applyBindings(vm, context.$element().children('#Login')[0]);
        });
    }
    return {
        get Login() {
            return Login;
        }, __esModule: true
    };
});

define("DataController", ['knockout'], function ($__0) {
    "use strict";
    var __moduleName = "DataController";
    if (!$__0 || !$__0.__esModule) $__0 = {
    default:
        $__0
    };
    var ko = $__0.
default;

    function Manage(context) {
        if (!context.session('user')) {
            context.session('redirect', '#/Data/Manage');
            context.redirect('#/Home/Login');
            return;
        }
        require(['viewmodels/Data/ManageViewModel', 'text!Views/Templates/Data/Manage.html!strip'], (function ($__0, $__1) {
            if (!$__0 || !$__0.__esModule) $__0 = {
            default:
                $__0
            };
            if (!$__1 || !$__1.__esModule) $__1 = {
            default:
                $__1
            };
            var viewmodel = $__0.
        default;
            var html = $__1.
        default;
            var vm = new viewmodel({
                userid: context.session('user', (function () {
                    return '1';
                }))
            });
            context.app.swap(html);
            ko.applyBindings(vm, context.$element().children('#Manage')[0]);
        }));
    }
    return {
        get Manage() {
            return Manage;
        }, __esModule: true
    };
});

define("GameController", ['knockout'], function ($__0) {
    "use strict";
    var __moduleName = "GameController";
    if (!$__0 || !$__0.__esModule) $__0 = {
    default:
        $__0
    };
    var ko = $__0.
default;

    function Setup(context) {
        if (!context.session('user')) {
            context.session('redirect', '#/Game/Setup');
            context.redirect('#/Home/Login');
            return;
        }
        require(['viewmodels/Game/SetupViewModel', 'text!Views/Templates/Game/Setup.html!strip'], function ($__1, $__2) {
            if (!$__1 || !$__1.__esModule) $__1 = {
            default:
                $__1
            };
            if (!$__2 || !$__2.__esModule) $__2 = {
            default:
                $__2
            };
            var viewModel = $__1.
        default;
            var index = $__2.
        default;
            var viewmodel = new viewModel({
                userId: context.session('user', (function () {
                    return '-1';
                }))
            });
            context.app.swap(index);
            ko.applyBindings(viewmodel, context.$element().children('#Setup')[0]);
        });
    }

    function Play(context) {
        if (!context.session('user')) {
            context.session('redirect', '#/Game/Setup');
            context.redirect('#/Home/Login');
            return;
        }
        require(['viewmodels/Game/PlayViewModel', 'text!Views/Templates/Game/Play.html!strip'], function ($__1, $__2) {
            if (!$__1 || !$__1.__esModule) $__1 = {
            default:
                $__1
            };
            if (!$__2 || !$__2.__esModule) $__2 = {
            default:
                $__2
            };
            var viewModel = $__1.
        default;
            var game = $__2.
        default;
            context.app.swap(game);
            var onlineGame = context.params['OnlineGame'] == "on";
            if (onlineGame) {}
            var viewModel = new viewModel({
                Name: context.params['GameName'],
                Required: context.params['ChosenCategories'],
                Online: onlineGame,
                Userid: context.session('user', (function () {
                    return '-1';
                }))
            });
            ko.applyBindings(viewModel, context.$element().children('#Game')[0]);
        });
    }
    return {
        get Setup() {
            return Setup;
        }, get Play() {
            return Play;
        }, __esModule: true
    };
});

define("HomeController", ['knockout', 'errorhandler', 'dataaccess'], function ($__0, $__2, $__4) {
    "use strict";
    var __moduleName = "HomeController";
    if (!$__0 || !$__0.__esModule) $__0 = {
    default:
        $__0
    };
    if (!$__2 || !$__2.__esModule) $__2 = {
    default:
        $__2
    };
    if (!$__4 || !$__4.__esModule) $__4 = {
    default:
        $__4
    };
    var ko = $__0.
default;
    var ErrorHandler = $__2.
default;
    var dataAccess = $__4;
    var errorHandler = new ErrorHandler();

    function Page(context, name) {
        require(['viewmodels/Home/' + name + 'ViewModel', 'text!Views/Templates/Home/' + name + '.html!strip'], (function ($__1, $__2) {
            if (!$__1 || !$__1.__esModule) $__1 = {
            default:
                $__1
            };
            if (!$__2 || !$__2.__esModule) $__2 = {
            default:
                $__2
            };
            var viewModel = $__1.
        default;
            var index = $__2.
        default;
            var viewmodel = new viewModel({});
            context.app.swap(index);
            ko.applyBindings(viewmodel, context.$element().children('#' + name)[0]);
        }));
    }

    function Login(context) {
        var redirect = context.session('redirect') || '#/',
            username = context.params['username'],
            password = context.params['password'];
        context.clearSession();
        dataAccess.UserLogin(username, password).then((function (info) {
            if (info.error) {
                console.log(info.message);
                errorHandler.Show({
                    message: 'Either your username or password are not registered in the database.',
                    title: 'Invalid Username or Password'
                });
            } else {
                context.session('user', info.user);
                context.redirect(redirect);
            }
        }), (function (err) {
            console.log(err);
            errorHandler.Show({
                message: 'Either your username or password are not registered in the database.',
                title: 'Invalid Username or Password'
            });
        }));
    }

    function Register(context) {
        if (context.params['valid'] == "false") return;
        dataAccess.UserRegister(context.params['username'], context.params['password']).then((function (info) {
            if (info.error) {
                console.log(info.message);
                errorHandler.Show({
                    message: info.message,
                    title: 'Could Not Create User'
                });
            } else {
                context.redirect('#/');
                errorHandler.Show({
                    title: 'User successfully created.',
                    level: 'success',
                    message: ''
                });
            }
        }), (function (err) {
            console.log(err);
            errorHandler.Show({
                message: err,
                title: 'Could Not Create User'
            });
        }));
    }
    return {
        get Page() {
            return Page;
        }, get Login() {
            return Login;
        }, get Register() {
            return Register;
        }, __esModule: true
    };
});