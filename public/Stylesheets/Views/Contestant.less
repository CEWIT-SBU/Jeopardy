/*	Jeopardy Main Stylesheet
 *	Author:		Daniel Beus
 *	Date:  		10/4/2012
 */

 // Imports
@import "../Reset";
@import "../CrossBrowser";
@import "../Colors";


// Variables
@buttonTopFaceColor: @green;
@buttonWidth: 200px;


// Mixins
.buttonColorMixer(@topColor:@buttonTopFaceColor, @darken: 10%)
{
	@buttonBodyColor: darken(@topColor, @darken);
	
	.textColor(@topColor);
	border: solid 1px @buttonBodyColor;
	//.background(top left, lighten(@topColor, 5%), darken(@topColor, 5%), @topColor, '', right);
	background: @topColor;
	.box-shadow(0px, 9px, 0px, @buttonBodyColor);
	
	&:active
	{
		.box-shadow(0px, 2px, 0px, @buttonBodyColor);
		position:relative;
		top:7px;
	}
}
.roundButtonColorMixer(@topColor: @buttonTopFaceColor, @darken: 10%)
{
	@buttonBodyColor: darken(@topColor, @darken);

	.textColor(@topColor);
	
	.top
	{
		.background(top left, lighten(@topColor, 5%), darken(@topColor, 15%), @topColor, '', right);
	}

	.body
	{
		.background(left, lighten(@buttonBodyColor, 10%), darken(@buttonBodyColor, 10%), @buttonBodyColor, '', right);
	}

	&:active
	{
		.top
		{
			margin-top: @buttonWidth * 0.2;
			p
			{
				margin-top: @buttonWidth * 0.5;
			}
		}

		.body
		{
			height: @buttonWidth * 0.8;
			margin-top: @buttonWidth * 0.42;
			.border-radius(~"100% / 62%");
		}
	}
}

.textColor(@background) when (lightness(@background) >= 50%)
{
	color: black;
}
.textColor(@background) when (lightness(@background) < 50%)
{
	color: white;
}


// Styles
.box
{
	width: @buttonWidth * 1.45;
	float:left;
	height:100px;
	background:#ececec;
	border: 1px solid #d1d1d1;
	.border-radius(5px);
	position: relative;
	left: 33%;

	.button
	{
		position:relative;
		width: @buttonWidth;
		margin:13px;
		display:block;
		text-transform: uppercase;
		text-decoration: none;
		.border-radius(5px);
		text-align:center;
		padding:20px 30px;
		.transition(all, 0.1s);
		cursor: pointer;
		.unselectable();

		.buttonColorMixer();

		&.red
		{
			.buttonColorMixer(@red);
		}
		&.orange
		{
			.buttonColorMixer(@orange);
		}
		&.yellow
		{
			.buttonColorMixer(@yellow);
		}
		&.green
		{
			.buttonColorMixer(@green);
		}
		&.blue
		{
			.buttonColorMixer(@blue);
		}
		&.purple
		{
			.buttonColorMixer(@purple);
		}
		&.black
		{
			.buttonColorMixer(@black);
		}
		&.white
		{
			.buttonColorMixer(@white);
		}
	}
}

body *:not(#username)
{
	.unselectable();
}

#newContainer
{
	text-transform: uppercase;
	text-decoration: none;
	.roundButtonColorMixer(@green);

	&.box
	{
		width: @buttonWidth * 1.45;
		float: left;
		height: @buttonWidth * 1.45;
		background: hsl(0, 0, 93%);
		border: 1px solid hsl(0, 0, 82%);
		.border-radius(5px);
		position: relative;
		left: 33%;
	}

	&.red
	{
		.roundButtonColorMixer(@red);
	}
	&.orange
	{
		.roundButtonColorMixer(@orange);
	}
	&.yellow
	{
		.roundButtonColorMixer(@yellow);
	}
	&.green
	{
		.roundButtonColorMixer(@green);
	}
	&.blue
	{
		.roundButtonColorMixer(@blue);
	}
	&.purple
	{
		.roundButtonColorMixer(@purple);
	}
	&.black
	{
		.roundButtonColorMixer(@black);
	}
	&.white
	{
		.roundButtonColorMixer(@white);
	}

	.top
	{
		width: @buttonWidth;
		height: @buttonWidth;
		.border-radius(100%);
		.transition(all, 0.1s);
		.transform(rotateX(64deg), translateY(-731px));
		p
		{
			position: relative;
			top: 35px;
			text-align: center;
			font-size: 4em;
			.transition(all, 0.1s);
			.unselectable();
		}
	}

	.body
	{
		width: @buttonWidth;
		height: @buttonWidth;
		.border-radius(~"100% / 50%");
		.transition(all, 0.1s);
	}

	> *
	{
		margin-left: 15%;
		margin-top: 15%;
		cursor: pointer;
	}
}

.ScoreContainer
{
	position: absolute;
	left: 0;
	top: 75%;
	font-size: xx-large;
	//color: hsl(193, 76%, 35%);
	color: @backgroundColor;

	.score
	{
		color: @textColor;
		font-weight: bolder;
	}
}

.player
{
	position: absolute;
	left: 0;
	top: 70%;
	font-size: xx-large;
	color: @backgroundColor;
}

.indicator
{
	color: @red;
	font-size: large;
	height: 40px;

	&.Ready
	{
		color: @green;
		font-size: x-large;
	}
}